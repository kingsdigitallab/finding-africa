---
- hosts: all
  vars_files:
    - vars.yml
  gather_facts: false
  become: true

  tasks:
  - name: fix debian sudoers file
    become: yes
    lineinfile:
      path: /etc/sudoers
      backup: yes
      regexp: "^%sudo\\s+ALL=\\(ALL:ALL\\)\\s+ALL$"
      line: "%sudo   ALL=(ALL) NOPASSWD: ALL"
    tags:
      - system

  - name: apt | install https transport for apt
    apt:
      pkg: apt-transport-https
      state: present
      update_cache: yes
    tags:
      -system

  - name: apt | install required system packages
    apt:
      pkg: '{{ item }}'
      state: present
      update_cache: yes
    with_items: '{{ system_packages }}'
    tags:
      - system

  - name: Upgrade all packages to the latest version
    apt:
      upgrade: yes
    tags:
      - system

  - name: zsh | clone oh-my-zsh repo
    git: repo={{ zsh.oh_my_zsh }} dest={{ user_home }}/.oh-my-zsh
    tags:
      - system

  - name: zsh | deploy .zshrc
    copy: src={{ zsh.zshrc }} dest={{ user_home }}/.zshrc owner=vagrant
    tags:
      - system

  - name: zsh | as default shell
    user: name=vagrant shell=/bin/zsh
    tags:
      - system

  - name: motd | clean existing
    become: yes
    file:
      path: /etc/update-motd.d/00-header
      state: absent
    tags:
      - system

  - name: motd | deploy motd
    become: yes
    copy: src={{ motd.file }} dest=/etc/update-motd.d/00-kdl owner=root
    tags:
      - system

  - name: motd | permissions
    become: yes
    file:
      path: /etc/update-motd.d/00-kdl
      mode: u+x
    tags:
      - system

- hosts: all
  vars_files:
    - vars.yml
  gather_facts: false
  tasks:
  - name: pip | install virtualenv
    become: yes
    pip:
      name: virtualenv
      executable: pip
      state: latest
    tags:
      - python

  - name: pip | setup virtualenv
    file: path={{ python.virtualenv_location }} state=directory
  - command: virtualenv {{ python.virtualenv_location }}
    tags:
      - python

  - name: pip | update setuptools
    pip:
      name: setuptools
      virtualenv: "{{ python.virtualenv_location }}"
      state: latest
    tags:
      - python

  - name: pip | update pip
    pip:
      name: pip
      virtualenv: "{{ python.virtualenv_location }}"
      state: latest
    tags:
      - python

  - name: pip | update pip
    pip:
      name: flake8
      virtualenv: "{{ python.virtualenv_location }}"
      state: latest
    tags:
      - python

  - name: pip | ensure python requirements are installed to latest version
    pip:
      requirements: "{{ project_root }}/{{ python.requirements }}"
      virtualenv: "{{ python.virtualenv_location }}"
    tags:
      - python

- hosts: all
  vars_files:
      - vars.yml
  tasks:
  - name: git | init
    command: "git init"
    ignore_errors: yes # Stop errors if it already exists
    args:
      chdir: "{{ project_root }}"
    tags:
      - git

  - name: git | flake8 pre-commit hook
    command: "{{ user_home }}/venv/bin/flake8 --install-hook=git"
    ignore_errors: yes # Stop errors if it already exists
    args:
      chdir: "{{ project_root }}"
  - command: "git config flake8.strict True"
    args:
      chdir: "{{ project_root }}"
    tags:
      - git
